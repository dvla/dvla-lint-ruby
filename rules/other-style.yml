Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  Enabled: true
  EnforcedStyle: outdent

Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: false

Style/Alias:
  Description: 'Use alias_method instead of alias.'
  Enabled: false

Layout/HashAlignment:
  Description: >-
    Align the elements of a hash literal if they span more than
    one line.
  Enabled: false

Layout/ParameterAlignment:
  Description: >-
    Align the parameters of a method call if they span more
    than one line.
  Enabled: false

Style/ArrayJoin:
  Description: 'Use Array#join instead of Array#*.'
  Enabled: false

Style/AsciiComments:
  Description: 'Use only ascii symbols in comments.'
  Enabled: false

Naming/AsciiIdentifiers:
  Description: 'Use only ascii symbols in identifiers.'
  Enabled: false

Style/Attr:
  Description: 'Checks for uses of Module#attr.'
  Enabled: false

Style/BeginBlock:
  Description: 'Avoid the use of BEGIN blocks.'
  Enabled: false

Style/BlockComments:
  Description: 'Do not use block comments.'
  Enabled: false

Metrics/BlockNesting:
  Description: 'Avoid excessive block nesting'
  Enabled: false

Style/BlockDelimiters:
  Description: >-
    Avoid using {...} for multi-line blocks (multiline chaining is
    always ugly).
    Prefer {...} over do...end for single-line blocks.
  Enabled: false

Style/CaseEquality:
  Description: 'Avoid explicit use of the case equality operator(===).'
  Enabled: false

Style/CharacterLiteral:
  Description: 'Checks for uses of character literals.'
  Enabled: false

Style/ClassAndModuleChildren:
  Description: 'Checks style of children classes and modules.'
  Enabled: false

Metrics/ClassLength:
  Description: 'Avoid classes longer than 100 lines of code.'
  Enabled: false

Style/CollectionMethods:
  Description: 'Preferred collection methods.'
  Enabled: false

Style/ColonMethodCall:
  Description: 'Do not use :: for method call.'
  Enabled: false

Style/CommentAnnotation:
  Description: >-
    Checks formatting of special comments
    (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: false

Style/EmptyHeredoc:
  Description: Checks for using empty heredoc to reduce redundancy.
  Enabled: false

Style/MagicCommentFormat:
  Description: Ensures magic comments are written consistently throughout your code base.
  Enabled: false

Style/MapCompactWithConditionalBlock:
  Description: Prefer `select` or `reject` over `map { ... }.compact`.
  Enabled: false

Layout/CommentIndentation:
  Description: 'Indentation of comments.'
  Enabled: false

Metrics/CyclomaticComplexity:
  Description: 'Avoid complex methods.'
  Enabled: false

Style/PreferredHashMethods:
  Description: 'Checks for use of deprecated Hash methods.'
  Enabled: false

Style/Documentation:
  Description: 'Document classes and non-namespace modules.'
  Enabled: false

Layout/DotPosition:
  Description: 'Checks the position of the dot in multi-line method calls.'
  Enabled: false

Style/DoubleNegation:
  Description: 'Checks for uses of double negation (!!).'
  Enabled: false

Style/EachWithObject:
  Description: 'Prefer `each_with_object` over `inject` or `reduce`.'
  Enabled: false

Layout/EmptyLinesAroundAccessModifier:
  Description: "Keep blank lines around access modifiers."
  Enabled: true

Layout/EmptyLines:
  Description: "Keeps track of empty lines around expression bodies."
  Enabled: false

Style/EmptyLiteral:
  Description: 'Prefer literals to Array.new/Hash.new/String.new.'
  Enabled: false

Style/Encoding:
  Description: 'Use UTF-8 as the source file encoding.'
  Enabled: false

Style/EndBlock:
  Description: 'Avoid the use of END blocks.'
  Enabled: false

Style/EvenOdd:
  Description: 'Favor the use of Fixnum#even? && Fixnum#odd?'
  Enabled: false

Naming/FileName:
  Description: 'Use snake_case for source file names.'
  Enabled: false

Lint/FlipFlop:
  Description: 'Checks for flip flops'
  Enabled: false

Style/FormatString:
  Description: 'Enforce the use of Kernel#sprintf, Kernel#format or String#%.'
  Enabled: false

Style/GlobalVars:
  Description: 'Do not introduce global variables.'
  Enabled: false

Style/GuardClause:
  Description: 'Check for conditionals that can be replaced with guard clauses'
  Enabled: false

Style/IfWithSemicolon:
  Description: 'Never use if x; .... Use the ternary operator instead.'
  Enabled: false

Layout/FirstArrayElementIndentation:
  Description: >-
    Checks the indentation of the first element in an array
    literal.
  Enabled: false

Layout/FirstHashElementIndentation:
  Description: 'Checks the indentation of the first key in a hash literal.'
  Enabled: false

Style/Lambda:
  Description: 'Use the new lambda literal syntax for single-line blocks.'
  Enabled: false

Style/LambdaCall:
  Description: 'Use lambda.call(...) instead of lambda.(...).'
  Enabled: false

Layout/LeadingCommentSpace:
  Description: 'Comments should start with a space.'
  Enabled: false

Style/LineEndConcatenation:
  Description: >-
    Use \ instead of + or << to concatenate two string literals at
    line end.
  Enabled: false

Style/MethodDefParentheses:
  Description: >-
    Checks if the method definitions have or don't have
    parentheses.
  Enabled: false

Metrics/MethodLength:
  Description: 'Avoid methods longer than 10 lines of code.'
  Enabled: false

Style/ModuleFunction:
  Description: 'Checks for usage of `extend self` in modules.'
  Enabled: false

Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

Style/NegatedIf:
  Description: >-
    Favor unless over if for negative conditions
    (or control flow or).
  Enabled: false

Style/NegatedWhile:
  Description: 'Favor until over while for negative conditions.'
  Enabled: false

Style/Next:
  Description: 'Use `next` to skip iteration instead of a condition at the end.'
  Enabled: false

Style/NilComparison:
  Description: 'Prefer x.nil? to x == nil.'
  Enabled: false

Style/NonNilCheck:
  Description: 'Checks for redundant nil checks.'
  Enabled: false

Style/Not:
  Description: 'Use ! instead of not.'
  Enabled: false

Style/NumericLiterals:
  Description: >-
    Add underscores to large numeric literals to improve their
    readability.
  Enabled: false

Metrics/ParameterLists:
  Description: 'Avoid parameter lists longer than three or four parameters.'
  Enabled: false

Style/PercentLiteralDelimiters:
  Description: 'Use `%`-literal delimiters consistently'
  Enabled: false

Style/PerlBackrefs:
  Description: 'Avoid Perl-style regex back references.'
  Enabled: false

Naming/PredicatePrefix:
  Description: 'Check the names of predicate methods.'
  Enabled: false

Style/Proc:
  Description: 'Use proc instead of Proc.new.'
  Enabled: false

Style/RaiseArgs:
  Description: 'Checks the arguments passed to raise/fail.'
  Enabled: false

Style/RedundantBegin:
  Description: "Don't use begin blocks when they are not needed."
  Enabled: false

Style/RedundantException:
  Description: "Checks for an obsolete RuntimeException argument in raise/fail."
  Enabled: false

Style/RedundantSelf:
  Description: "Don't use self where it's not needed."
  Enabled: false

Style/RegexpLiteral:
  Description: >-
    Use %r for regular expressions matching more than
    `MaxSlashes` '/' characters.
    Use %r only for regular expressions matching more than
    `MaxSlashes` '/' character.
  Enabled: false

Style/RescueModifier:
  Description: 'Avoid using rescue in its modifier form.'
  Enabled: false

Style/SafeNavigation:
  Description: >-
    This cop transforms usages of a method call safeguarded by a check for the
    existance of the object to safe navigation (`&.`).
  Enabled: false

Style/SelfAssignment:
  Description: 'Checks for places where self-assignment shorthand should have been used.'
  Enabled: false

Style/Semicolon:
  Description: "Don't use semicolons to terminate expressions."
  Enabled: false

Style/SignalException:
  Description: 'Checks for proper usage of fail and raise.'
  Enabled: false

Style/SingleLineBlockParams:
  Description: 'Enforces the names of some block params.'
  Enabled: false

Style/SingleLineMethods:
  Description: 'Avoid single-line methods.'
  Enabled: false

Layout/SpaceBeforeFirstArg:
  Description: >-
    Checks that exactly one space is used between a method name
    and the first argument for method calls without parentheses.
  Enabled: false

Layout/SpaceAroundKeyword:
  Description: 'Use spaces after if/elsif/unless/while/until/case/when.'
  Enabled: false

Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: false

Layout/SpaceBeforeComment:
  Description: >-
    Checks for missing space between code and a comment on the
    same line.
  Enabled: false

Layout/SpaceInsideBlockBraces:
  Description: >-
    Checks that block braces have or don't have surrounding space.
    For blocks taking parameters, checks that the left brace has
    or doesn't have trailing space.
  Enabled: true

Layout/SpaceInsideHashLiteralBraces:
  Description: "Use spaces inside hash literal braces - or don't."
  Enabled: true

Style/SpecialGlobalVars:
  Description: 'Avoid Perl-style global variables.'
  Enabled: false

Style/RedundantCapitalW:
  Description: 'Checks for %W when interpolation is not needed.'
  Enabled: false

Style/CommandLiteral:
  Description: 'Checks for %x when `` would do.'
  Enabled: false

Style/VariableInterpolation:
  Description: >-
    Don't interpolate global, instance and class variables
    directly in strings.
  Enabled: false

Style/WhenThen:
  Description: 'Use when x then ... for one-line cases.'
  Enabled: false

Style/WhileUntilDo:
  Description: 'Checks for redundant do after while or until.'
  Enabled: false

Style/WhileUntilModifier:
  Description: >-
    Favor modifier while/until usage when you have a
    single-line body.
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Style/MissingElse:
  Enabled: true
  EnforcedStyle: case

Style/EnvHome: # new in 1.29
  Description: Checks for consistent usage of ENV['HOME']
  Enabled: false

Style/FetchEnvVar: # new in 1.28
  Description: Suggests ENV.fetch for the replacement of ENV[]
  Enabled: true

Style/ObjectThen: # new in 1.28
  Description: Enforces the use of consistent method names Object#yield_self or Object#then
  EnforcedStyle: then
  Enabled: true

Style/RedundantInitialize: # new in 1.27
  Description: Checks for initialize methods that are redundant
  Enabled: false

Style/ArrayIntersect: # new in 1.40
  Description: Checks for duplicated magic comments
  Enabled: true
  
Style/ComparableClamp: # new in 1.44
  Description: Enforces the use of Comparable#clamp instead of comparison by minimum and maximum
  Enabled: true

Style/ConcatArrayLiterals: # new in 1.41
  Description: Enforces the use of Array#push(item) instead of Array#concat([item]) to avoid redundant array literals
  Enabled: false

Style/MapToSet: # new in 1.42
  Description: Looks for uses of map.to_set or collect.to_set that could be written with just to_set.
  Enabled: false

Style/MinMaxComparison: # new in 1.42
  Description: Enforces the use of max or min instead of comparison for greater or less
  Enabled: true

Style/OperatorMethodCall: # new in 1.37
  Description: Checks for redundant dot before operator method call
  Enabled: true

Style/RedundantConstantBase: # new in 1.40
  Description: "Avoid redundant :: prefix on constant"
  Enabled: true

Style/RedundantDoubleSplatHashBraces: # new in 1.41
  Description: Checks for redundant uses of double splat hash braces
  Enabled: true

Style/RedundantEach: # new in 1.38
  Description: Checks for redundant each
  Enabled: false

Style/RedundantStringEscape: # new in 1.37
  Description: Checks for redundant escapes in string literals
  Enabled: true

Style/RedundantCurrentDirectoryInPath: # new in 1.53.0
  Description: Checks for uses a redundant current directory in path.
  Enabled: true

Style/RedundantRegexpArgument: # new in 1.53.0
  Description: Identifies places where argument can be replaced from a deterministic regexp to a string.
  Enabled: true

Style/ReturnNilInPredicateMethodDefinition: # new in 1.53.0
  Description: Checks if return or return nil is used in predicate method definitions.
  Enabled: true

Style/YAMLFileRead: # new in 1.53.0
  Description: Checks for the use of YAML.load, YAML.safe_load, and YAML.parse with File.read argument.
  Enabled: true

Style/MultipleComparison: # new in 0.49.0
  Description: Checks against comparing a variable with multiple items, where Array#include?, Set#include? or a case
    could be used instead to avoid code repetition. It accepts comparisons of multiple method calls to avoid unnecessary
    method calls by default. It can be configured by AllowMethodComparison option.
  Enabled: true

Style/RedundantArrayConstructor: # new in 1.52.0
  Description: Checks for the instantiation of array using redundant Array constructor. Autocorrect replaces to array
    literal which is the simplest and fastest.
  Enabled: true

Style/RedundantRegexpConstructor: # new in 1.52.0
  Description: Checks for the instantiation of regexp using redundant Regexp.new or Regexp.compile. Autocorrect replaces
    to regexp literal which is the simplest and fastest.
  Enabled: true

Style/RedundantFilterChain: # new in 1.52.0
  Description: Identifies usages of any?, empty? or none? predicate methods chained to select/filter/find_all and change
    them to use predicate method instead.
  Enabled: true

Style/ExactRegexpMatch: # new in 1.51.0
  Description: Checks for exact regexp match inside Regexp literals.
  Enabled: true

Style/RedundantLineContinuation: # new in 1.49.0
  Description: Check for redundant line continuation.
  Enabled: true

Style/DataInheritance: # new in 1.49.0
  Description: Checks for inheritance from Data.define to avoid creating the anonymous parent class.
  Enabled: false # Required Ruby version: 3.2

Style/DirEmpty: # new in 1.48.0
  Description: Prefer to use Dir.empty?('path/to/dir') when checking if a directory is empty.
  Enabled: true

Style/FileEmpty: # new in 1.48.0
  Description: Prefer to use File.empty?('path/to/file') when checking if a file is empty.
  Enabled: true

Metrics/CollectionLiteralLength: # new in 1.47.0
  Description: Checks for literals with extremely many entries. This is indicative of configuration or data that may be
    better extracted somewhere else, like a database, fetched from an API, or read from a non-code file (CSV, JSON,
    YAML, etc.).
  Enabled: true

Style/RedundantHeredocDelimiterQuotes: # new in 1.45.0
  Description: Checks for redundant heredoc delimiter quotes.
  Enabled: true
